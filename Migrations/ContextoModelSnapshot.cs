// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ToNaReserva.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Avaliacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("estrelas")
                        .HasColumnType("integer");

                    b.Property<int>("postoid")
                        .HasColumnType("integer");

                    b.Property<int>("usuarioid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("postoid");

                    b.HasIndex("usuarioid");

                    b.ToTable("avaliacoes", (string)null);
                });

            modelBuilder.Entity("Models.Posto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("diesel")
                        .HasColumnType("double precision");

                    b.Property<string>("estado")
                        .HasColumnType("text");

                    b.Property<int>("estrelas")
                        .HasColumnType("integer");

                    b.Property<double>("etanol")
                        .HasColumnType("double precision");

                    b.Property<double>("gasolina")
                        .HasColumnType("double precision");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("telefone")
                        .HasColumnType("text");

                    b.Property<int>("usuarioid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("postos", (string)null);
                });

            modelBuilder.Entity("Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("categoria")
                        .HasColumnType("text");

                    b.Property<string>("datacadastro")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<int>("postoid")
                        .HasColumnType("integer");

                    b.Property<string>("quantidade")
                        .HasColumnType("text");

                    b.Property<double?>("valor")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.HasIndex("postoid");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cpfcnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tipo")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Models.Avaliacao", b =>
                {
                    b.HasOne("Models.Posto", "posto")
                        .WithMany()
                        .HasForeignKey("postoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("posto");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Models.Produto", b =>
                {
                    b.HasOne("Models.Posto", null)
                        .WithMany("produtos")
                        .HasForeignKey("postoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Posto", b =>
                {
                    b.Navigation("produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
